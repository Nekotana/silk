--- node_modules/babel-register/lib/node.js.orig	2016-05-02 16:43:34.000000000 -0700
+++ node_modules/babel-register/lib/node.js	2016-05-12 21:34:13.000000000 -0700
@@ -1,34 +1,16 @@
 /*istanbul ignore next*/"use strict";
 
 exports.__esModule = true;
 
 var _stringify = require("babel-runtime/core-js/json/stringify");
 
 var _stringify2 = _interopRequireDefault(_stringify);
 
-exports.default = function () {
-  /*istanbul ignore next*/var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
-
-  if (opts.only != null) only = /*istanbul ignore next*/_babelCore.util.arrayify(opts.only, /*istanbul ignore next*/_babelCore.util.regexify);
-  if (opts.ignore != null) ignore = /*istanbul ignore next*/_babelCore.util.arrayify(opts.ignore, /*istanbul ignore next*/_babelCore.util.regexify);
-
-  if (opts.extensions) hookExtensions( /*istanbul ignore next*/_babelCore.util.arrayify(opts.extensions));
-
-  if (opts.cache === false) cache = null;
-
-  delete opts.extensions;
-  delete opts.ignore;
-  delete opts.cache;
-  delete opts.only;
-
-  /*istanbul ignore next*/(0, _extend2.default)(transformOpts, opts);
-};
-
 var /*istanbul ignore next*/_cloneDeep = require("lodash/lang/cloneDeep");
 
 /*istanbul ignore next*/
 var _cloneDeep2 = _interopRequireDefault(_cloneDeep);
 
 var /*istanbul ignore next*/_sourceMapSupport = require("source-map-support");
 
 /*istanbul ignore next*/
@@ -63,16 +45,18 @@
 
 /*istanbul ignore next*/
 var _path2 = _interopRequireDefault(_path);
 
 function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
 
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
 
+module.exports = function(userOpts) {
+
 /*istanbul ignore next*/_sourceMapSupport2.default.install({
   handleUncaughtExceptions: false,
   /*istanbul ignore next*/retrieveSourceMap: function retrieveSourceMap(source) {
     var map = maps && maps[source];
     if (map) {
       return {
         url: null,
         map: map
@@ -184,9 +168,29 @@
   /*istanbul ignore next*/(0, _each2.default)(_exts, function (ext) {
     oldHandlers[ext] = require.extensions[ext];
     registerExtension(ext);
   });
 }
 
 hookExtensions( /*istanbul ignore next*/_babelCore.util.canCompile.EXTENSIONS);
 
-/*istanbul ignore next*/module.exports = exports["default"];
\ No newline at end of file
+function main () {
+  /*istanbul ignore next*/var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
+
+  if (opts.only != null) only = /*istanbul ignore next*/_babelCore.util.arrayify(opts.only, /*istanbul ignore next*/_babelCore.util.regexify);
+  if (opts.ignore != null) ignore = /*istanbul ignore next*/_babelCore.util.arrayify(opts.ignore, /*istanbul ignore next*/_babelCore.util.regexify);
+
+  if (opts.extensions) hookExtensions( /*istanbul ignore next*/_babelCore.util.arrayify(opts.extensions));
+
+  if (opts.cache === false) cache = null;
+
+  delete opts.extensions;
+  delete opts.ignore;
+  delete opts.cache;
+  delete opts.only;
+
+  /*istanbul ignore next*/(0, _extend2.default)(transformOpts, opts);
+};
+
+main(userOpts);
+}
+
