--- node_modules/babel-register/lib/node.js	2016-02-07 18:15:48.000000000 -0800
+++ node_modules/babel-register/lib/node.js.mod	2016-02-09 13:50:48.000000000 -0800
@@ -35,16 +35,17 @@
 var _fs = require("fs");
 
 var _fs2 = _interopRequireDefault(_fs);
 
 var _path = require("path");
 
 var _path2 = _interopRequireDefault(_path);
 
+module.exports = function(userOpts) {
 _sourceMapSupport2["default"].install({
   handleUncaughtExceptions: false,
   retrieveSourceMap: function retrieveSourceMap(source) {
     var map = maps && maps[source];
     if (map) {
       return {
         url: null,
         map: map
@@ -160,27 +161,27 @@
   _lodashCollectionEach2["default"](_exts, function (ext) {
     oldHandlers[ext] = require.extensions[ext];
     registerExtension(ext);
   });
 }
 
 hookExtensions(_babelCore.util.canCompile.EXTENSIONS);
 
-exports["default"] = function () {
+  function main () {
   var opts /*:: ?: Object*/ = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
 
   if (opts.only != null) only = _babelCore.util.arrayify(opts.only, _babelCore.util.regexify);
   if (opts.ignore != null) ignore = _babelCore.util.arrayify(opts.ignore, _babelCore.util.regexify);
 
   if (opts.extensions) hookExtensions(_babelCore.util.arrayify(opts.extensions));
 
   if (opts.cache === false) cache = null;
 
   delete opts.extensions;
   delete opts.ignore;
   delete opts.cache;
   delete opts.only;
 
   _lodashObjectExtend2["default"](transformOpts, opts);
 };
-
-module.exports = exports["default"];
\ No newline at end of file
+  main(userOpts);
+};
